# Generated by Django 4.1 on 2024-11-25 06:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customer_id', models.CharField(db_column='Customer_ID', max_length=50, primary_key=True, serialize=False, unique=True)),
                ('fname', models.CharField(db_column='Fname', max_length=50)),
                ('lname', models.CharField(db_column='Lname', max_length=50)),
                ('street', models.CharField(blank=True, db_column='Street', max_length=100, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=50, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=50, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='Zipcode', max_length=20, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Customers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Drivers',
            fields=[
                ('driver_id', models.CharField(db_column='Driver_ID', max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Drivers',
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('payment_id', models.CharField(db_column='Payment_ID', max_length=50, primary_key=True, serialize=False)),
                ('method', models.CharField(db_column='Method', max_length=50)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
            ],
            options={
                'db_table': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='Restaurants',
            fields=[
                ('res_id', models.CharField(db_column='Res_ID', max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('street', models.CharField(blank=True, db_column='Street', max_length=100, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=50, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=50, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='Zipcode', max_length=20, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Restaurants',
            },
        ),
        migrations.CreateModel(
            name='Members',
            fields=[
                ('customer', models.OneToOneField(db_column='Customer_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='food_delivery_app.customers')),
                ('subscription_end_date', models.DateField()),
            ],
            options={
                'db_table': 'Members',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('review_id', models.CharField(db_column='Review_ID', max_length=50, primary_key=True, serialize=False)),
                ('score', models.IntegerField(blank=True, db_column='Score', null=True)),
                ('customer', models.ForeignKey(blank=True, db_column='Customer_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='food_delivery_app.customers')),
                ('res', models.ForeignKey(blank=True, db_column='Res_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='food_delivery_app.restaurants')),
            ],
            options={
                'db_table': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.CharField(db_column='Order_ID', max_length=50, primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=20, null=True)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
                ('estimated_arrival', models.DateTimeField(blank=True, db_column='Estimated_arrival', null=True)),
                ('customer', models.ForeignKey(blank=True, db_column='Customer_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='food_delivery_app.customers')),
                ('driver', models.ForeignKey(blank=True, db_column='Driver_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='food_delivery_app.drivers')),
                ('payment', models.ForeignKey(blank=True, db_column='Payment_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='food_delivery_app.payments')),
                ('restaurant', models.ForeignKey(blank=True, db_column='Restaurant_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='food_delivery_app.restaurants')),
            ],
            options={
                'db_table': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Cars',
            fields=[
                ('license_plate_no', models.CharField(db_column='License_plate_no', max_length=20, primary_key=True, serialize=False)),
                ('brand', models.CharField(blank=True, db_column='Brand', max_length=50, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=50, null=True)),
                ('color', models.CharField(blank=True, db_column='Color', max_length=30, null=True)),
                ('active_registration_status', models.IntegerField(blank=True, db_column='Active_registration_status', null=True)),
                ('driver', models.ForeignKey(blank=True, db_column='Driver_ID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='food_delivery_app.drivers')),
            ],
            options={
                'db_table': 'Cars',
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('order', models.OneToOneField(db_column='Order_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='food_delivery_app.orders')),
                ('item_name', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
            ],
            options={
                'db_table': 'Order_items',
                'unique_together': {('order', 'item_name')},
            },
        ),
        migrations.CreateModel(
            name='MenuItems',
            fields=[
                ('res', models.OneToOneField(db_column='Res_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='food_delivery_app.restaurants')),
                ('item_name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'Menu_items',
                'unique_together': {('res', 'item_name')},
            },
        ),
        migrations.CreateModel(
            name='EmergencyContacts',
            fields=[
                ('driver', models.OneToOneField(db_column='Driver_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='food_delivery_app.drivers')),
                ('contact_name', models.CharField(db_column='Contact_Name', max_length=100)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Emergency_Contacts',
                'unique_together': {('driver', 'contact_name')},
            },
        ),
    ]
